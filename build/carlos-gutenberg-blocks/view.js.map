{"version":3,"file":"carlos-gutenberg-blocks/view.js","mappings":";;;;AAAAA,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,YAAW;EACrD,MAAMC,MAAM,GAAGF,QAAQ,CAACG,gBAAgB,CAAC,8BAA8B,CAAC;EAExED,MAAM,CAACE,OAAO,CAACC,KAAK,IAAI;IACpB,MAAMC,MAAM,GAAGD,KAAK,CAACF,gBAAgB,CAAC,YAAY,CAAC;IACnD,MAAMI,aAAa,GAAGF,KAAK,CAACG,OAAO,CAAC,uBAAuB,CAAC;IAC5D,IAAIC,iBAAiB,GAAG,CAAC;;IAEzB;IACA,MAAMC,aAAa,GAAGC,QAAQ,CAACJ,aAAa,EAAEK,OAAO,CAACF,aAAa,IAAI,EAAE,CAAC;IAC1E,MAAMG,aAAa,GAAGF,QAAQ,CAACJ,aAAa,EAAEK,OAAO,CAACC,aAAa,IAAI,CAAC,CAAC;IACzE,MAAMC,UAAU,GAAGH,QAAQ,CAACJ,aAAa,EAAEK,OAAO,CAACE,UAAU,IAAI,CAAC,CAAC;IACnE,MAAMC,eAAe,GAAGC,UAAU,CAACT,aAAa,EAAEK,OAAO,CAACG,eAAe,IAAI,CAAC,CAAC;IAC/E,MAAME,gBAAgB,GAAGD,UAAU,CAACT,aAAa,EAAEK,OAAO,CAACK,gBAAgB,IAAI,CAAC,CAAC;;IAEjF;IACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;MACtB;MACAZ,MAAM,CAACG,iBAAiB,CAAC,CAACU,SAAS,CAACC,MAAM,CAAC,QAAQ,CAAC;;MAEpD;MACAX,iBAAiB,GAAG,CAACA,iBAAiB,GAAG,CAAC,IAAIH,MAAM,CAACe,MAAM;;MAE3D;MACA,MAAMC,QAAQ,GAAGhB,MAAM,CAACG,iBAAiB,CAAC;MAC1Ca,QAAQ,CAACH,SAAS,CAACI,GAAG,CAAC,QAAQ,CAAC;;MAEhC;MACA,MAAMC,KAAK,GAAGF,QAAQ,CAACnB,gBAAgB,CAAC,mBAAmB,CAAC;MAC5DqB,KAAK,CAACpB,OAAO,CAACqB,GAAG,IAAI;QACjBA,GAAG,CAACN,SAAS,CAACC,MAAM,CAAC,SAAS,CAAC;QAC/B,KAAKK,GAAG,CAACC,WAAW,CAAC,CAAC;QACtBD,GAAG,CAACN,SAAS,CAACI,GAAG,CAAC,SAAS,CAAC;MAChC,CAAC,CAAC;IACN,CAAC;;IAED;IACA,MAAMI,kBAAkB,GACnBZ,eAAe,GAAG,GAAG,GACtBD,UAAU,GACVJ,aAAa,GACbO,gBAAgB,GAChB,CAAC;IAEL,MAAMW,SAAS,GAAGD,kBAAkB,GAAG,IAAI;;IAE3C;IACA,MAAME,eAAe,GAAGvB,MAAM,CAAC,CAAC,CAAC,CAACH,gBAAgB,CAAC,mBAAmB,CAAC;IACvE0B,eAAe,CAACzB,OAAO,CAACqB,GAAG,IAAIA,GAAG,CAACN,SAAS,CAACI,GAAG,CAAC,SAAS,CAAC,CAAC;;IAE5D;IACAO,WAAW,CAACZ,WAAW,EAAEU,SAAS,CAAC;EACvC,CAAC,CAAC;AACN,CAAC,CAAC,C","sources":["webpack://carlos-gutenberg-blocks/./src/carlos-gutenberg-blocks/view.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\n    const blocks = document.querySelectorAll('.cgb-floating-boxes-frontend');\n\n    blocks.forEach(block => {\n        const groups = block.querySelectorAll('.cgb-group');\n        const parentElement = block.closest('[data-float-duration]');\n        let currentGroupIndex = 0;\n\n        // Obtener configuración de animación\n        const floatDuration = parseInt(parentElement?.dataset.floatDuration || 18);\n        const cycleDuration = parseInt(parentElement?.dataset.cycleDuration || 3);\n        const floatDelay = parseInt(parentElement?.dataset.floatDelay || 2);\n        const slideUpDuration = parseFloat(parentElement?.dataset.slideUpDuration || 1);\n        const slideOutDuration = parseFloat(parentElement?.dataset.slideOutDuration || 1);\n\n        // Función para cambiar entre grupos\n        const switchGroup = () => {\n            // Desactivar grupo actual\n            groups[currentGroupIndex].classList.remove('active');\n            \n            // Cambiar al siguiente grupo\n            currentGroupIndex = (currentGroupIndex + 1) % groups.length;\n            \n            // Activar nuevo grupo y sus animaciones\n            const newGroup = groups[currentGroupIndex];\n            newGroup.classList.add('active');\n            \n            // Reiniciar animaciones del nuevo grupo\n            const boxes = newGroup.querySelectorAll('.cgb-floating-box');\n            boxes.forEach(box => {\n                box.classList.remove('animate');\n                void box.offsetWidth; // Forzar reflow\n                box.classList.add('animate');\n            });\n        };\n\n        // Calcular tiempo total de animación\n        const totalAnimationTime = \n            (slideUpDuration * 1.8) + \n            floatDelay + \n            floatDuration + \n            slideOutDuration + \n            1;\n\n        const totalTime = totalAnimationTime * 1000;\n\n        // Iniciar animaciones del primer grupo\n        const firstGroupBoxes = groups[0].querySelectorAll('.cgb-floating-box');\n        firstGroupBoxes.forEach(box => box.classList.add('animate'));\n\n        // Cambiar grupos periódicamente\n        setInterval(switchGroup, totalTime);\n    });\n});"],"names":["document","addEventListener","blocks","querySelectorAll","forEach","block","groups","parentElement","closest","currentGroupIndex","floatDuration","parseInt","dataset","cycleDuration","floatDelay","slideUpDuration","parseFloat","slideOutDuration","switchGroup","classList","remove","length","newGroup","add","boxes","box","offsetWidth","totalAnimationTime","totalTime","firstGroupBoxes","setInterval"],"sourceRoot":""}